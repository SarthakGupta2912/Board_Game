using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.UI;

public class Number_Generator : MonoBehaviour
{
    public Text number_txt;// text to display dice number
    public Text player_turn;// text to display which player's turn is there to move
    public Text Not_Allowed_txt;// text to display inaproppiate move
    int a;// random number
    public GameObject player_1;// player 1
    public GameObject player_2;//player 2
    public GameObject win_panel;// win panel
    GameObject[] _waypoints;// invisible waypoints
    int lastpos_1 = 0;//  For the step movement and for saving the last position of player_1
    int lastpos_2 = 0;//  For the step movement and for saving the last position of player_2
    bool moved_once_1 = false;// For player_1
    bool moved_once_2 = true;// For player_2

    // Start is called before the first frame update
    void Start()
    {
        //Making the waypoints Gameobject to get all the gameobjects with tag "waypoints" and forming an array of that i.e. 25 waypoints are there
        _waypoints = GameObject.FindGameObjectsWithTag("waypoints");
        // making the players to begin game from beginning
        player_1.transform.position = _waypoints[0].transform.position;
        player_2.transform.position = _waypoints[0].transform.position;
    }

    public void number_gen()
    {
        //Generating and displaying random number between 1-6
        a = Random.Range(1, 7);
        number_txt.text = "" + a;

        // Functions for movement of both players are called according to the bool variables
        if (moved_once_1 == false)
        {
            player_turn.text = "Wait for the player 1 to move";
            StartCoroutine(pos_player_1());
            StopCoroutine(pos_player_2());
        }
        else if(moved_once_1 == true)
        {
            player_turn.text = "Wait for the player 2 to move";
            StopCoroutine(pos_player_1());
            StartCoroutine(pos_player_2());
        }
    }

    // Function for the movement of player_1 
    IEnumerator pos_player_1(int b=56)
    {
        if (player_1.transform.position == _waypoints[b].transform.position)
        {
            if(a >= 6)
            {
                Not_Allowed_txt.text = "Your number is "+a+", which is inappropiate ";
                //player_turn.text = "Player 1's turn";
                number_txt.text = null;
                moved_once_1 = true;
                moved_once_2 = false;
            }
            else if (a < 6)
            {
                for (int i = 0; i < a; i++)
                {
                    Not_Allowed_txt.text = null;
                    yield return new WaitForSeconds(0.5f);
                    lastpos_1++;
                    player_1.transform.position = _waypoints[lastpos_1].transform.position;
                }
                moved_once_1 = true;
                moved_once_2 = false; ;
            }
        }
        else if (player_1.transform.position == _waypoints[b+1].transform.position)
        {
            if (a > 4)
            {
                Not_Allowed_txt.text = "Your number is " + a + ", which is inappropiate ";
               // player_turn.text = "Player 1's turn";
                number_txt.text = null;
                moved_once_1 = true;
                moved_once_2 = false;
            }
            else if (a <= 4)
            {
                for (int i = 0; i < a; i++)
                {
                    Not_Allowed_txt.text = null;
                    yield return new WaitForSeconds(0.5f);
                    lastpos_1++;
                    player_1.transform.position = _waypoints[lastpos_1].transform.position;
                }
                moved_once_1 = true;
                moved_once_2 = false;
            }
        }
        else if (player_1.transform.position == _waypoints[b+2].transform.position)
        {
            if (a > 3)
            {
                Not_Allowed_txt.text = "Your number is " + a + ", which is inappropiate ";
               // player_turn.text = "Player 1's turn";
                number_txt.text = null;
                moved_once_1 = true;
                moved_once_2 = false;
            }
            else if (a <= 3)
            {
                for (int i = 0; i < a; i++)
                {
                    Not_Allowed_txt.text = null;
                    yield return new WaitForSeconds(0.5f);
                    lastpos_1++;
                    player_1.transform.position = _waypoints[lastpos_1].transform.position;
                }
                moved_once_1 = true;
                moved_once_2 = false;
            }
        }
        else if (player_1.transform.position == _waypoints[b+3].transform.position)
        {
            if (a >= 2)
            {
                Not_Allowed_txt.text = "Your number is " + a + ", which is inappropiate ";
               // player_turn.text = "Player 1's turn";
                number_txt.text = null;
                moved_once_1 = true;
                moved_once_2 = false;
            }
            else if (a < 2)
            {
                for (int i = 0; i < a; i++)
                {
                    Not_Allowed_txt.text = null;
                    yield return new WaitForSeconds(0.5f);
                    lastpos_1++;
                    player_1.transform.position = _waypoints[lastpos_1].transform.position;
                }
                moved_once_1 = true;
                moved_once_2 = false;
            }
        }
        else if (player_1.transform.position == _waypoints[b+4].transform.position)
        {
            if (a > 1)
            {
                Not_Allowed_txt.text = "Your number is " + a + ", which is inappropiate ";
              //  player_turn.text = "Player 1's turn";
                number_txt.text = null;
                moved_once_1 = true;
                moved_once_2 = false;
            }
            else if (a == 1)
            {
               // player_turn.text = "Player 1's turn";
                for (int i = 0; i < a; i++)
                {
                    Not_Allowed_txt.text = null;
                    yield return new WaitForSeconds(0.5f);
                    lastpos_1++;
                    player_1.transform.position = _waypoints[lastpos_1].transform.position;
                }
                moved_once_1 = true;
                moved_once_2 = false;
            }
        }

        // Normal movement according to the dice
        else if (moved_once_1 == false && moved_once_2 == true)
        {
            for (int i = 0; i < a; i++)
            {
                Not_Allowed_txt.text = null;
                yield return new WaitForSeconds(0.5f);
                lastpos_1++;
                player_1.transform.position = _waypoints[lastpos_1].transform.position;
            }
        }
        moved_once_1 = true;
        moved_once_2 = false;

        //if 6 comes then player_1 will move again !
        if (a == 6)
        {
            moved_once_1 = false;
            moved_once_2 = true;
        }

        // End the Game_1
        if(lastpos_1 == 61)
        {
            win_panel.SetActive(true);
        }
    }

    // Function for the movement of player_2 
    IEnumerator pos_player_2(int c=56)
    {
        // The following are for the movement after 19th waypoint or number in the game so that there is no error and the game can be played efficiently
        if (player_2.transform.position == _waypoints[c].transform.position)
        {
            if (a >= 6)
            {
                Not_Allowed_txt.text = "Your number is " + a + ", which is inappropiate ";
                number_txt.text = null;
                moved_once_2 = true;
                moved_once_1 = false;
            }
            else if (a < 6)
            {
                for (int i = 0; i < a; i++)
                {
                    Not_Allowed_txt.text = null;
                    yield return new WaitForSeconds(0.5f);
                    lastpos_2++;
                    player_2.transform.position = _waypoints[lastpos_2].transform.position;
                }
                moved_once_2 = true;
                moved_once_1 = false;
            }
        }
        else if (player_2.transform.position == _waypoints[c+1].transform.position)
        {
            if (a > 4)
            {
                Not_Allowed_txt.text = "Your number is " + a + ", which is inappropiate ";
                number_txt.text = null;
                moved_once_2 = true;
                moved_once_1 = false;
            }
            else if (a <= 4)
            {
                for (int i = 0; i < a; i++)
                {
                    Not_Allowed_txt.text = null;
                    yield return new WaitForSeconds(0.5f);
                    lastpos_2++;
                    player_2.transform.position = _waypoints[lastpos_2].transform.position;
                }
                moved_once_2 = true;
                moved_once_1 = false;
            }
        }
        else if (player_2.transform.position == _waypoints[c+2].transform.position)
        {
            if (a > 3)
            {
                Not_Allowed_txt.text = "Your number is " + a + ", which is inappropiate ";
                number_txt.text = null;
                moved_once_2 = true;
                moved_once_1 = false;
            }
            else if(a <= 3)
            {
                for (int i = 0; i < a; i++)
                {
                    Not_Allowed_txt.text = null;
                    yield return new WaitForSeconds(0.5f);
                    lastpos_2++;
                    player_2.transform.position = _waypoints[lastpos_2].transform.position;
                }
                moved_once_2 = true;
                moved_once_1 = false;
            }
        }
        else if (player_2.transform.position == _waypoints[c+3].transform.position)
        {
            if (a > 2)
            {
                Not_Allowed_txt.text = "Your number is " + a + ", which is inappropiate ";
                number_txt.text = null;
                moved_once_2 = true;
                moved_once_1 = false;
            }
            else if (a <= 2)
            {
                for (int i = 0; i < a; i++)
                {
                    Not_Allowed_txt.text = null;
                    yield return new WaitForSeconds(0.5f);
                    lastpos_2++;
                    player_2.transform.position = _waypoints[lastpos_2].transform.position;
                }
                moved_once_2 = true;
                moved_once_1 = false;
            }
        }
        else if (player_2.transform.position == _waypoints[c+4].transform.position)
        {
            if (a > 1)
            {
                Not_Allowed_txt.text = "Your number is " + a + ", which is inappropiate ";
                number_txt.text = null;
                moved_once_2 = true;
                moved_once_1 = false;
            }
            else if (a == 1)
            {
                for (int i = 0; i < a; i++)
                {
                    Not_Allowed_txt.text = null;
                    yield return new WaitForSeconds(0.5f);
                    lastpos_2++;
                    player_2.transform.position = _waypoints[lastpos_2].transform.position;
                }
                moved_once_2 = true;
                moved_once_1 = false;
            }
        }

        // Normal movement according to the dice
        if (moved_once_2 == false && moved_once_1 == true)
        { 
             for (int i = 0; i < a; i++)
             {
                Not_Allowed_txt.text = null;
                yield return new WaitForSeconds(0.5f);
                lastpos_2++;
                player_2.transform.position = _waypoints[lastpos_2].transform.position;
             }
        }
        moved_once_2 = true;
        moved_once_1 = false;

        //if 6 comes then player_2 will move again !
        if (a == 6)
        {
            moved_once_1 = true;
            moved_once_2 = false;
        }

        // End the Game_2
        if (lastpos_2 == 61)
        {
            win_panel.SetActive(true);
        }
    }
}
    
